@page
@model TimeTracking.Pages.TimeTracks.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Time Tracks
@if (Model.TargetUserId != null && UserManager.GetUserId(User) != Model.TargetUserId)
{
    <span>(
    @((await UserManager.FindByIdAsync(Model.TargetUserId)).UserName)
    )</span>
}
</h2>
<form name="sprintForm" method="get">
    <input type="hidden" name="id" value="@Model.TargetUserId" />
    <div class="form-group">
        <label class="control-label">Sprint</label>
        <select id="sprintId" name="sprintId" asp-items="@Model.SprintsSL" onchange="DoPostBackBySprint();">
            <option>--You can select Sprint--</option>
        </select>            
    </div>
</form>
<form name="selectDatesForm" method="GET"> 
        <input type="hidden" name="id" value="@Model.TargetUserId" />
        <input type="hidden" name="sprintId" value="@Model.TargetSprintId" />   
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" type="Date" onchange="DoPostBackByDates();"/>
        <label asp-for="StopDate"></label>
        <input asp-for="StopDate"type="Date" onchange="DoPostBackByDates();"/>    
</form>
<p>
    <a asp-page="Create" asp-route-id="@Model.TargetUserId" asp-route-id="@Model.TargetUserId" asp-route-sprintId="@Model.TargetSprintId">New Time Track</a>
</p>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                Task Number
            </th>
            <th>
                Description
            </th>
            <!--th>
                Platform
            </th-->
            <th>
                Estimation
            </th>
            <th>
                RemainingTime
            </th>            
            @foreach (var day in Model.SelectedDays)
            {
                <th>
                    @day.ToString("ddd")
                    @day.Date.Day                                         
                </th>    
            }
            <th>
                Total
            </th>                        
        </tr>
    </thead>
    <tbody>
@{float totalHours = 0f;}
@foreach (var item in Model.SpentTimes) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IssueNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueDescription)
            </td>
            <!--td>
                @Html.DisplayFor(modelItem => item.IssuePlatform)
            </td-->
            <td>
                <a asp-page="/Tasks/Edit" asp-route-id="@item.IssueID">
                    @item.Estimate
                </a>
            </td>
            <td>
                <a asp-page="/Tasks/Edit" asp-route-id="@item.IssueID">
                    @item.RemainingTime
                </a>
            </td>                       
            @{float totalTaskHours = 0f;}
            @foreach (var loggedTime in item.LoggedTimes)
            {                
                <td>
                    @if (loggedTime.TimeTrackID.HasValue && loggedTime.Hours > 0)
                    {
                        totalTaskHours += loggedTime.Hours ?? 0;

                        <a asp-page="./Edit" asp-route-timeTrackId="@loggedTime.TimeTrackID">@loggedTime.Hours</a>                        
                    }
                    else
                    {
                        <a asp-page="./Create" asp-route-targetDate="@loggedTime.TrackDate">&nbsp;</a>                        
                    }
                </td>
            }
            <td>
                @totalTaskHours
                @{totalHours += totalTaskHours;}
            </td>                       
        </tr>
}
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td>
                Total
            </td>
            @for (var i = 0; i < Model.SelectedDays.Count; i++)
            {
                <td>
                    @Model.SpentTimes.Sum(t => t.LoggedTimes[i].Hours ?? 0)
                </td>
            }
            <td>
                @totalHours
            </td>
        </tr>
    </tbody>
</table>

<script>
    function DoPostBackBySprint()
    {
        var select = document.getElementById("sprintId");
        var option = select.options[select.selectedIndex];
        if (option.value) {            
            document.sprintForm.submit();
        }
    }

    function DoPostBackByDates() {
        document.selectDatesForm.submit();
    }
</script>
